-- POR_USER 테이블에 암호화된 개인정보를 저장하기 위한 컬럼 추가
ALTER TABLE POR_USER ADD ENCRYPTED_USER_NM VARCHAR2(255);
ALTER TABLE POR_USER ADD ENCRYPTED_USER_MAIL VARCHAR2(255);
ALTER TABLE POR_USER ADD ENCRYPTED_TEL1 VARCHAR2(100);
ALTER TABLE POR_USER ADD ENCRYPTED_TEL2 VARCHAR2(100);
ALTER TABLE POR_USER ADD ENCRYPTED_TEL3 VARCHAR2(100);
ALTER TABLE POR_USER ADD ENCRYPTED_MOBILE1 VARCHAR2(100);
ALTER TABLE POR_USER ADD ENCRYPTED_MOBILE2 VARCHAR2(100);
ALTER TABLE POR_USER ADD ENCRYPTED_MOBILE3 VARCHAR2(100);

-- 컬럼 설명 추가
COMMENT ON COLUMN POR_USER.ENCRYPTED_USER_NM IS '암호화된 사용자 이름';
COMMENT ON COLUMN POR_USER.ENCRYPTED_USER_MAIL IS '암호화된 사용자 이메일';
COMMENT ON COLUMN POR_USER.ENCRYPTED_TEL1 IS '암호화된 전화번호1';
COMMENT ON COLUMN POR_USER.ENCRYPTED_TEL2 IS '암호화된 전화번호2';
COMMENT ON COLUMN POR_USER.ENCRYPTED_TEL3 IS '암호화된 전화번호3';
COMMENT ON COLUMN POR_USER.ENCRYPTED_MOBILE1 IS '암호화된 휴대전화번호1';
COMMENT ON COLUMN POR_USER.ENCRYPTED_MOBILE2 IS '암호화된 휴대전화번호2';
COMMENT ON COLUMN POR_USER.ENCRYPTED_MOBILE3 IS '암호화된 휴대전화번호3';

-- 기존 데이터 암호화 작업을 위한 프로시저
-- 주의: 이 프로시저는 DB 관리자가 필요한 경우에만 실행해야 함
CREATE OR REPLACE PROCEDURE ENCRYPT_EXISTING_USER_DATA AS
BEGIN
    -- 이 부분은 실제 DB 환경에 맞춰 수정 필요
    -- 관리자가 Java 애플리케이션에서 개별 사용자에 대해 암호화 처리하는 것이 권장됨
    
    -- 프로시저 실행 결과 로그
    DBMS_OUTPUT.PUT_LINE('기존 사용자 데이터 암호화 작업이 완료되었습니다.');
    -- 코드 완료 후 실제 암호화 로직은 Java 애플리케이션에서 처리
END;
/
